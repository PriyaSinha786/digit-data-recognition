from sklearn.datasets import fetch_openml
mnist=fetch_openml("mnist_784")
mnist            ####// this will show all the values.
x,y=mnist['data'],mnist['target']
x
y

x.shape
y.shape
%matplotlib inline
import matplotlib
import matplotlib.pyplot as plt
some_digit=x[3607]

some_digit_image=some_digit.reshape(28 ,28)

plt.imshow(some_digit_image,cmap=matplotlib.cm.binary , interpolation="nearest")  										###this will predict the digit stored in some_digit in line 13.

y[3602]
x_train=x[0:6000]

x_test=x[6000:7000]

y_train=y[0:6000]

y_test=y[6000:7000]

import numpy as np

shuffle_index=np.random.permutation(6000)

x_train,y_train=x_train[shuffle_index],y_train[shuffle_index]
y_train=y_train.astype(np.int8)
y_test=y_test.astype(np.int8)
y_train_2=(y_train==2)
y_test_2=(y_test==2)
y_train_2
y_test_2
from sklearn.linear_model import LogisticRegression
clf=LogisticRegression(tol=0.1)
clf.fit(x_train,y_train_2)
clf.predict([some_digit])
from sklearn.model_selection import cross_val_score
a=cross_val_score(clf,x_train,y_train_2,cv=3,scoring="accuracy")
a.mean()
